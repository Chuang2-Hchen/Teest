// 主程序开始
void setup() {
	mPython.begin();
	dfrobotRandomSeed();
	myIot.setMqttCallback(msgHandles);
	buttonA.setPressedCallback(onButtonAPressed);
	buttonB.setPressedCallback(onButtonBPressed);
	display.setCursorLine(1);
	display.printLine("连接WiFi");
	myIot.wifiConnect("Chuang2", "hc666666");
	while (!myIot.wifiStatus()) {yield();}
	display.setCursorLine(2);
	display.printLine("WiFi连接成功");
	myIot.init("iot.dfrobot.com.cn","se705iKMg","","yenAcmKMRz",topics,1883);
	myIot.connect();
	display.setCursorLine(3);
	display.printLine("mqtt连接");
	while (!myIot.connected()) {yield();}
	display.setCursorLine(4);
	display.printLine("mqtt连接成功");
	mydb.setServerParameter("http://tinywebdb.appinventor.space/api", "lrz797","a46a5f05");
	display.fillScreen(0);
}
void loop() {

}

// 事件回调函数
void onButtonAPressed() {
	display.fillScreen(0);
	mind_n_flag = 0;
	mind_n_time = 0;
	mind_s_my_string_variable = mydb.getTag((String((random(1, 5+1)))));
	display.setCursorLine(1);
	display.printLine("题目如下");
	display.setCursorLine(2);
	display.printLine(mind_s_my_string_variable);
	myIot.publish(topic_0, mind_s_my_string_variable);
	myIot.publish(topic_2, mind_s_my_string_variable);
	mind_n_ms = millis();
	mind_n_stop = 1;
	while (!(0==mind_n_stop)) {
		delay(500);
		mind_n_time = ((millis() - mind_n_ms) / 1000);
		mind_n_m = (((int)(mind_n_time / 60)) % ((int)60));
		mind_n_s = (((int)mind_n_time) % ((int)60));
		mind_n_ms2 = (((int)(millis() - mind_n_ms)) % ((int)1000));
		display.setCursorLine(3);
		display.printLine((String("时间") + String((String(numberRetain(mind_n_m,0)) + String((String(":") + String((String(numberRetain(mind_n_s,0)) + String((String(":") + String(numberRetain(mind_n_ms2,0))))))))))));
		yield();
	}
	while (!((touchPadT.isTouched()) || (touchPadH.isTouched()))) {yield();}
	if ((touchPadT.isTouched())) {
		myIot.publish(topic_0, "正确");
		myIot.publish(topic_2, "正确");
		display.setCursorLine(1);
		display.printLine("发送成功");
		display.fillInLine(2, 0);
		display.fillInLine(3, 0);
		display.fillInLine(4, 0);
	}
	else if ((touchPadH.isTouched())) {
		myIot.publish(topic_0, "错误");
		myIot.publish(topic_2, "错误");
		display.setCursorLine(1);
		display.printLine("发送成功");
		display.fillInLine(2, 0);
		display.fillInLine(3, 0);
		display.fillInLine(4, 0);
	}
}
void onButtonBPressed() {
	myIot.publish(topic_0, "flag1");
	myIot.publish(topic_2, "flag1");
	while (!((touchPadP.isTouched()) || (touchPadY.isTouched()))) {yield();}
	if ((touchPadP.isTouched())) {
		myIot.publish(topic_0, "YES");
		myIot.publish(topic_2, "YES");
		display.setCursorLine(1);
		display.printLine("发送成功");
		display.fillInLine(2, 0);
		display.fillInLine(3, 0);
		display.fillInLine(4, 0);
	}
	else if ((touchPadY.isTouched())) {
		myIot.publish(topic_0, "NO");
		myIot.publish(topic_2, "NO");
		display.setCursorLine(1);
		display.printLine("发送成功");
		display.fillInLine(2, 0);
		display.fillInLine(3, 0);
		display.fillInLine(4, 0);
	}
}
void obloqMqttEventT1(String& message) {
	display.fillInLine(4, 0);
	if (((String("flag0").indexOf(String(message)) != -1))) {
	}
	else if (((String("flag2").indexOf(String(message)) != -1))) {
	}
	else if (((String("YES").indexOf(String(message)) != -1))) {
		display.setCursorLine(4);
		display.printLine("YES");
	}
	else if (((String("NO").indexOf(String(message)) != -1))) {
		display.setCursorLine(4);
		display.printLine("NO");
	}
	else if ((String("正确")==message)) {
		display.setCursorLine(4);
		display.printLine(message);
	}
	else if ((String("错误")==message)) {
		display.setCursorLine(4);
		display.printLine(message);
	}
	else {
		display.setCursorLine(1);
		display.printLine("题目如下");
		display.setCursorLine(2);
		display.printLine(message);
	}
	if ((0==mind_n_flag)) {
		if ((String("flag0")==message)) {
			display.setCursorLine(1);
			display.printLine("抢答的人");
			display.setCursorLine(2);
			display.printLine("2018764316卢荣镇");
			mind_n_stop = 0;
		}
		else if ((String("flag2")==message)) {
			display.setCursorLine(1);
			display.printLine("抢答的人");
			display.setCursorLine(2);
			display.printLine("2018764328梁文轩");
			mind_n_stop = 0;
		}
		mind_n_flag = 1;
	}
}

// 静态函数
String numberRetain(float t, uint8_t n)
{
  String t2 = String(t,n+1);
  if(n<=0){
    return t2.substring(0,t2.length()-2);
  }else{
    return t2.substring(0,t2.length()-1);
  }
}